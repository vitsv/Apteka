#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Apteka
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="apteka")]
	public partial class AptekaDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDost_ilosc(Dost_ilosc instance);
    partial void UpdateDost_ilosc(Dost_ilosc instance);
    partial void DeleteDost_ilosc(Dost_ilosc instance);
    partial void InsertDostawa(Dostawa instance);
    partial void UpdateDostawa(Dostawa instance);
    partial void DeleteDostawa(Dostawa instance);
    partial void InsertKategorie(Kategorie instance);
    partial void UpdateKategorie(Kategorie instance);
    partial void DeleteKategorie(Kategorie instance);
    partial void InsertKlient(Klient instance);
    partial void UpdateKlient(Klient instance);
    partial void DeleteKlient(Klient instance);
    partial void InsertLek(Lek instance);
    partial void UpdateLek(Lek instance);
    partial void DeleteLek(Lek instance);
    partial void InsertPostac(Postac instance);
    partial void UpdatePostac(Postac instance);
    partial void DeletePostac(Postac instance);
    partial void InsertPromocja(Promocja instance);
    partial void UpdatePromocja(Promocja instance);
    partial void DeletePromocja(Promocja instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertZam_ilosc(Zam_ilosc instance);
    partial void UpdateZam_ilosc(Zam_ilosc instance);
    partial void DeleteZam_ilosc(Zam_ilosc instance);
    partial void InsertZamowienie(Zamowienie instance);
    partial void UpdateZamowienie(Zamowienie instance);
    partial void DeleteZamowienie(Zamowienie instance);
    #endregion
		
		public AptekaDataDataContext() : 
				base(global::Apteka.Properties.Settings.Default.aptekaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AptekaDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AptekaDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AptekaDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AptekaDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Dost_ilosc> Dost_iloscs
		{
			get
			{
				return this.GetTable<Dost_ilosc>();
			}
		}
		
		public System.Data.Linq.Table<Dostawa> Dostawas
		{
			get
			{
				return this.GetTable<Dostawa>();
			}
		}
		
		public System.Data.Linq.Table<Kategorie> Kategories
		{
			get
			{
				return this.GetTable<Kategorie>();
			}
		}
		
		public System.Data.Linq.Table<Klient> Klients
		{
			get
			{
				return this.GetTable<Klient>();
			}
		}
		
		public System.Data.Linq.Table<Lek> Leks
		{
			get
			{
				return this.GetTable<Lek>();
			}
		}
		
		public System.Data.Linq.Table<Postac> Postacs
		{
			get
			{
				return this.GetTable<Postac>();
			}
		}
		
		public System.Data.Linq.Table<Promocja> Promocjas
		{
			get
			{
				return this.GetTable<Promocja>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Zam_ilosc> Zam_iloscs
		{
			get
			{
				return this.GetTable<Zam_ilosc>();
			}
		}
		
		public System.Data.Linq.Table<Zamowienie> Zamowienies
		{
			get
			{
				return this.GetTable<Zamowienie>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dost_ilosc")]
	public partial class Dost_ilosc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Dost_iloscID;
		
		private int _LekID;
		
		private int _DostawaID;
		
		private int _Ilosc;
		
		private EntityRef<Dostawa> _Dostawa;
		
		private EntityRef<Lek> _Lek;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDost_iloscIDChanging(int value);
    partial void OnDost_iloscIDChanged();
    partial void OnLekIDChanging(int value);
    partial void OnLekIDChanged();
    partial void OnDostawaIDChanging(int value);
    partial void OnDostawaIDChanged();
    partial void OnIloscChanging(int value);
    partial void OnIloscChanged();
    #endregion
		
		public Dost_ilosc()
		{
			this._Dostawa = default(EntityRef<Dostawa>);
			this._Lek = default(EntityRef<Lek>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dost_iloscID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Dost_iloscID
		{
			get
			{
				return this._Dost_iloscID;
			}
			set
			{
				if ((this._Dost_iloscID != value))
				{
					this.OnDost_iloscIDChanging(value);
					this.SendPropertyChanging();
					this._Dost_iloscID = value;
					this.SendPropertyChanged("Dost_iloscID");
					this.OnDost_iloscIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LekID", DbType="Int NOT NULL")]
		public int LekID
		{
			get
			{
				return this._LekID;
			}
			set
			{
				if ((this._LekID != value))
				{
					if (this._Lek.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLekIDChanging(value);
					this.SendPropertyChanging();
					this._LekID = value;
					this.SendPropertyChanged("LekID");
					this.OnLekIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DostawaID", DbType="Int NOT NULL")]
		public int DostawaID
		{
			get
			{
				return this._DostawaID;
			}
			set
			{
				if ((this._DostawaID != value))
				{
					if (this._Dostawa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDostawaIDChanging(value);
					this.SendPropertyChanging();
					this._DostawaID = value;
					this.SendPropertyChanged("DostawaID");
					this.OnDostawaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ilosc", DbType="Int NOT NULL")]
		public int Ilosc
		{
			get
			{
				return this._Ilosc;
			}
			set
			{
				if ((this._Ilosc != value))
				{
					this.OnIloscChanging(value);
					this.SendPropertyChanging();
					this._Ilosc = value;
					this.SendPropertyChanged("Ilosc");
					this.OnIloscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dostawa_Dost_ilosc", Storage="_Dostawa", ThisKey="DostawaID", OtherKey="DostawaID", IsForeignKey=true)]
		public Dostawa Dostawa
		{
			get
			{
				return this._Dostawa.Entity;
			}
			set
			{
				Dostawa previousValue = this._Dostawa.Entity;
				if (((previousValue != value) 
							|| (this._Dostawa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dostawa.Entity = null;
						previousValue.Dost_iloscs.Remove(this);
					}
					this._Dostawa.Entity = value;
					if ((value != null))
					{
						value.Dost_iloscs.Add(this);
						this._DostawaID = value.DostawaID;
					}
					else
					{
						this._DostawaID = default(int);
					}
					this.SendPropertyChanged("Dostawa");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lek_Dost_ilosc", Storage="_Lek", ThisKey="LekID", OtherKey="LekID", IsForeignKey=true)]
		public Lek Lek
		{
			get
			{
				return this._Lek.Entity;
			}
			set
			{
				Lek previousValue = this._Lek.Entity;
				if (((previousValue != value) 
							|| (this._Lek.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lek.Entity = null;
						previousValue.Dost_iloscs.Remove(this);
					}
					this._Lek.Entity = value;
					if ((value != null))
					{
						value.Dost_iloscs.Add(this);
						this._LekID = value.LekID;
					}
					else
					{
						this._LekID = default(int);
					}
					this.SendPropertyChanged("Lek");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dostawa")]
	public partial class Dostawa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DostawaID;
		
		private System.DateTime _Data_zam;
		
		private System.DateTime _Data_realizacji;
		
		private EntitySet<Dost_ilosc> _Dost_iloscs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDostawaIDChanging(int value);
    partial void OnDostawaIDChanged();
    partial void OnData_zamChanging(System.DateTime value);
    partial void OnData_zamChanged();
    partial void OnData_realizacjiChanging(System.DateTime value);
    partial void OnData_realizacjiChanged();
    #endregion
		
		public Dostawa()
		{
			this._Dost_iloscs = new EntitySet<Dost_ilosc>(new Action<Dost_ilosc>(this.attach_Dost_iloscs), new Action<Dost_ilosc>(this.detach_Dost_iloscs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DostawaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DostawaID
		{
			get
			{
				return this._DostawaID;
			}
			set
			{
				if ((this._DostawaID != value))
				{
					this.OnDostawaIDChanging(value);
					this.SendPropertyChanging();
					this._DostawaID = value;
					this.SendPropertyChanged("DostawaID");
					this.OnDostawaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_zam", DbType="DateTime NOT NULL")]
		public System.DateTime Data_zam
		{
			get
			{
				return this._Data_zam;
			}
			set
			{
				if ((this._Data_zam != value))
				{
					this.OnData_zamChanging(value);
					this.SendPropertyChanging();
					this._Data_zam = value;
					this.SendPropertyChanged("Data_zam");
					this.OnData_zamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_realizacji", DbType="DateTime NOT NULL")]
		public System.DateTime Data_realizacji
		{
			get
			{
				return this._Data_realizacji;
			}
			set
			{
				if ((this._Data_realizacji != value))
				{
					this.OnData_realizacjiChanging(value);
					this.SendPropertyChanging();
					this._Data_realizacji = value;
					this.SendPropertyChanged("Data_realizacji");
					this.OnData_realizacjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dostawa_Dost_ilosc", Storage="_Dost_iloscs", ThisKey="DostawaID", OtherKey="DostawaID")]
		public EntitySet<Dost_ilosc> Dost_iloscs
		{
			get
			{
				return this._Dost_iloscs;
			}
			set
			{
				this._Dost_iloscs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dost_iloscs(Dost_ilosc entity)
		{
			this.SendPropertyChanging();
			entity.Dostawa = this;
		}
		
		private void detach_Dost_iloscs(Dost_ilosc entity)
		{
			this.SendPropertyChanging();
			entity.Dostawa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kategorie")]
	public partial class Kategorie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KategorieID;
		
		private string _Nazwa;
		
		private EntitySet<Lek> _Leks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKategorieIDChanging(int value);
    partial void OnKategorieIDChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    #endregion
		
		public Kategorie()
		{
			this._Leks = new EntitySet<Lek>(new Action<Lek>(this.attach_Leks), new Action<Lek>(this.detach_Leks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KategorieID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int KategorieID
		{
			get
			{
				return this._KategorieID;
			}
			set
			{
				if ((this._KategorieID != value))
				{
					this.OnKategorieIDChanging(value);
					this.SendPropertyChanging();
					this._KategorieID = value;
					this.SendPropertyChanged("KategorieID");
					this.OnKategorieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategorie_Lek", Storage="_Leks", ThisKey="KategorieID", OtherKey="KategorieID")]
		public EntitySet<Lek> Leks
		{
			get
			{
				return this._Leks;
			}
			set
			{
				this._Leks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Leks(Lek entity)
		{
			this.SendPropertyChanging();
			entity.Kategorie = this;
		}
		
		private void detach_Leks(Lek entity)
		{
			this.SendPropertyChanging();
			entity.Kategorie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Klient")]
	public partial class Klient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KlientID;
		
		private int _AdresID;
		
		private string _Imie;
		
		private string _Nazwisko;
		
		private string _Telefon;
		
		private string _Miasto;
		
		private string _Panstwo;
		
		private string _Kod_pocztowy;
		
		private string _Adres;
		
		private EntitySet<Promocja> _Promocjas;
		
		private EntitySet<Zamowienie> _Zamowienies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKlientIDChanging(int value);
    partial void OnKlientIDChanged();
    partial void OnAdresIDChanging(int value);
    partial void OnAdresIDChanged();
    partial void OnImieChanging(string value);
    partial void OnImieChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    partial void OnMiastoChanging(string value);
    partial void OnMiastoChanged();
    partial void OnPanstwoChanging(string value);
    partial void OnPanstwoChanged();
    partial void OnKod_pocztowyChanging(string value);
    partial void OnKod_pocztowyChanged();
    partial void OnAdresChanging(string value);
    partial void OnAdresChanged();
    #endregion
		
		public Klient()
		{
			this._Promocjas = new EntitySet<Promocja>(new Action<Promocja>(this.attach_Promocjas), new Action<Promocja>(this.detach_Promocjas));
			this._Zamowienies = new EntitySet<Zamowienie>(new Action<Zamowienie>(this.attach_Zamowienies), new Action<Zamowienie>(this.detach_Zamowienies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KlientID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KlientID
		{
			get
			{
				return this._KlientID;
			}
			set
			{
				if ((this._KlientID != value))
				{
					this.OnKlientIDChanging(value);
					this.SendPropertyChanging();
					this._KlientID = value;
					this.SendPropertyChanged("KlientID");
					this.OnKlientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdresID", DbType="Int NOT NULL")]
		public int AdresID
		{
			get
			{
				return this._AdresID;
			}
			set
			{
				if ((this._AdresID != value))
				{
					this.OnAdresIDChanging(value);
					this.SendPropertyChanging();
					this._AdresID = value;
					this.SendPropertyChanged("AdresID");
					this.OnAdresIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imie", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Imie
		{
			get
			{
				return this._Imie;
			}
			set
			{
				if ((this._Imie != value))
				{
					this.OnImieChanging(value);
					this.SendPropertyChanging();
					this._Imie = value;
					this.SendPropertyChanged("Imie");
					this.OnImieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwisko", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="VarChar(15)")]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Miasto", DbType="VarChar(20)")]
		public string Miasto
		{
			get
			{
				return this._Miasto;
			}
			set
			{
				if ((this._Miasto != value))
				{
					this.OnMiastoChanging(value);
					this.SendPropertyChanging();
					this._Miasto = value;
					this.SendPropertyChanged("Miasto");
					this.OnMiastoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Panstwo", DbType="VarChar(20)")]
		public string Panstwo
		{
			get
			{
				return this._Panstwo;
			}
			set
			{
				if ((this._Panstwo != value))
				{
					this.OnPanstwoChanging(value);
					this.SendPropertyChanging();
					this._Panstwo = value;
					this.SendPropertyChanged("Panstwo");
					this.OnPanstwoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kod_pocztowy", DbType="VarChar(10)")]
		public string Kod_pocztowy
		{
			get
			{
				return this._Kod_pocztowy;
			}
			set
			{
				if ((this._Kod_pocztowy != value))
				{
					this.OnKod_pocztowyChanging(value);
					this.SendPropertyChanging();
					this._Kod_pocztowy = value;
					this.SendPropertyChanged("Kod_pocztowy");
					this.OnKod_pocztowyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adres", DbType="VarChar(50)")]
		public string Adres
		{
			get
			{
				return this._Adres;
			}
			set
			{
				if ((this._Adres != value))
				{
					this.OnAdresChanging(value);
					this.SendPropertyChanging();
					this._Adres = value;
					this.SendPropertyChanged("Adres");
					this.OnAdresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klient_Promocja", Storage="_Promocjas", ThisKey="KlientID", OtherKey="KlientID")]
		public EntitySet<Promocja> Promocjas
		{
			get
			{
				return this._Promocjas;
			}
			set
			{
				this._Promocjas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klient_Zamowienie", Storage="_Zamowienies", ThisKey="KlientID", OtherKey="KlientID")]
		public EntitySet<Zamowienie> Zamowienies
		{
			get
			{
				return this._Zamowienies;
			}
			set
			{
				this._Zamowienies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Promocjas(Promocja entity)
		{
			this.SendPropertyChanging();
			entity.Klient = this;
		}
		
		private void detach_Promocjas(Promocja entity)
		{
			this.SendPropertyChanging();
			entity.Klient = null;
		}
		
		private void attach_Zamowienies(Zamowienie entity)
		{
			this.SendPropertyChanging();
			entity.Klient = this;
		}
		
		private void detach_Zamowienies(Zamowienie entity)
		{
			this.SendPropertyChanging();
			entity.Klient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lek")]
	public partial class Lek : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LekID;
		
		private int _KategorieID;
		
		private int _PostacID;
		
		private string _Nazwa;
		
		private string _M_nazwa;
		
		private double _Cena;
		
		private double _Cena_zakupu;
		
		private double _Cena_hutowa;
		
		private double _Refundacja;
		
		private int _Ilosc;
		
		private System.Nullable<double> _Dawka;
		
		private System.Nullable<double> _Opakowanie;
		
		private System.DateTime _Data_waznosci;
		
		private double _Promocja;
		
		private EntitySet<Dost_ilosc> _Dost_iloscs;
		
		private EntitySet<Zam_ilosc> _Zam_iloscs;
		
		private EntityRef<Kategorie> _Kategorie;
		
		private EntityRef<Postac> _Postac;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLekIDChanging(int value);
    partial void OnLekIDChanged();
    partial void OnKategorieIDChanging(int value);
    partial void OnKategorieIDChanged();
    partial void OnPostacIDChanging(int value);
    partial void OnPostacIDChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnM_nazwaChanging(string value);
    partial void OnM_nazwaChanged();
    partial void OnCenaChanging(double value);
    partial void OnCenaChanged();
    partial void OnCena_zakupuChanging(double value);
    partial void OnCena_zakupuChanged();
    partial void OnCena_hutowaChanging(double value);
    partial void OnCena_hutowaChanged();
    partial void OnRefundacjaChanging(double value);
    partial void OnRefundacjaChanged();
    partial void OnIloscChanging(int value);
    partial void OnIloscChanged();
    partial void OnDawkaChanging(System.Nullable<double> value);
    partial void OnDawkaChanged();
    partial void OnOpakowanieChanging(System.Nullable<double> value);
    partial void OnOpakowanieChanged();
    partial void OnData_waznosciChanging(System.DateTime value);
    partial void OnData_waznosciChanged();
    partial void OnPromocjaChanging(double value);
    partial void OnPromocjaChanged();
    #endregion
		
		public Lek()
		{
			this._Dost_iloscs = new EntitySet<Dost_ilosc>(new Action<Dost_ilosc>(this.attach_Dost_iloscs), new Action<Dost_ilosc>(this.detach_Dost_iloscs));
			this._Zam_iloscs = new EntitySet<Zam_ilosc>(new Action<Zam_ilosc>(this.attach_Zam_iloscs), new Action<Zam_ilosc>(this.detach_Zam_iloscs));
			this._Kategorie = default(EntityRef<Kategorie>);
			this._Postac = default(EntityRef<Postac>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LekID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LekID
		{
			get
			{
				return this._LekID;
			}
			set
			{
				if ((this._LekID != value))
				{
					this.OnLekIDChanging(value);
					this.SendPropertyChanging();
					this._LekID = value;
					this.SendPropertyChanged("LekID");
					this.OnLekIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KategorieID", DbType="Int NOT NULL")]
		public int KategorieID
		{
			get
			{
				return this._KategorieID;
			}
			set
			{
				if ((this._KategorieID != value))
				{
					if (this._Kategorie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKategorieIDChanging(value);
					this.SendPropertyChanging();
					this._KategorieID = value;
					this.SendPropertyChanged("KategorieID");
					this.OnKategorieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostacID", DbType="Int NOT NULL")]
		public int PostacID
		{
			get
			{
				return this._PostacID;
			}
			set
			{
				if ((this._PostacID != value))
				{
					if (this._Postac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostacIDChanging(value);
					this.SendPropertyChanging();
					this._PostacID = value;
					this.SendPropertyChanged("PostacID");
					this.OnPostacIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_nazwa", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string M_nazwa
		{
			get
			{
				return this._M_nazwa;
			}
			set
			{
				if ((this._M_nazwa != value))
				{
					this.OnM_nazwaChanging(value);
					this.SendPropertyChanging();
					this._M_nazwa = value;
					this.SendPropertyChanged("M_nazwa");
					this.OnM_nazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cena", DbType="Float NOT NULL")]
		public double Cena
		{
			get
			{
				return this._Cena;
			}
			set
			{
				if ((this._Cena != value))
				{
					this.OnCenaChanging(value);
					this.SendPropertyChanging();
					this._Cena = value;
					this.SendPropertyChanged("Cena");
					this.OnCenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cena_zakupu", DbType="Float NOT NULL")]
		public double Cena_zakupu
		{
			get
			{
				return this._Cena_zakupu;
			}
			set
			{
				if ((this._Cena_zakupu != value))
				{
					this.OnCena_zakupuChanging(value);
					this.SendPropertyChanging();
					this._Cena_zakupu = value;
					this.SendPropertyChanged("Cena_zakupu");
					this.OnCena_zakupuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cena_hutowa", DbType="Float NOT NULL")]
		public double Cena_hutowa
		{
			get
			{
				return this._Cena_hutowa;
			}
			set
			{
				if ((this._Cena_hutowa != value))
				{
					this.OnCena_hutowaChanging(value);
					this.SendPropertyChanging();
					this._Cena_hutowa = value;
					this.SendPropertyChanged("Cena_hutowa");
					this.OnCena_hutowaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Refundacja", DbType="Float NOT NULL")]
		public double Refundacja
		{
			get
			{
				return this._Refundacja;
			}
			set
			{
				if ((this._Refundacja != value))
				{
					this.OnRefundacjaChanging(value);
					this.SendPropertyChanging();
					this._Refundacja = value;
					this.SendPropertyChanged("Refundacja");
					this.OnRefundacjaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ilosc", DbType="Int NOT NULL")]
		public int Ilosc
		{
			get
			{
				return this._Ilosc;
			}
			set
			{
				if ((this._Ilosc != value))
				{
					this.OnIloscChanging(value);
					this.SendPropertyChanging();
					this._Ilosc = value;
					this.SendPropertyChanged("Ilosc");
					this.OnIloscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dawka", DbType="Float")]
		public System.Nullable<double> Dawka
		{
			get
			{
				return this._Dawka;
			}
			set
			{
				if ((this._Dawka != value))
				{
					this.OnDawkaChanging(value);
					this.SendPropertyChanging();
					this._Dawka = value;
					this.SendPropertyChanged("Dawka");
					this.OnDawkaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opakowanie", DbType="Float")]
		public System.Nullable<double> Opakowanie
		{
			get
			{
				return this._Opakowanie;
			}
			set
			{
				if ((this._Opakowanie != value))
				{
					this.OnOpakowanieChanging(value);
					this.SendPropertyChanging();
					this._Opakowanie = value;
					this.SendPropertyChanged("Opakowanie");
					this.OnOpakowanieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_waznosci", DbType="Date NOT NULL")]
		public System.DateTime Data_waznosci
		{
			get
			{
				return this._Data_waznosci;
			}
			set
			{
				if ((this._Data_waznosci != value))
				{
					this.OnData_waznosciChanging(value);
					this.SendPropertyChanging();
					this._Data_waznosci = value;
					this.SendPropertyChanged("Data_waznosci");
					this.OnData_waznosciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Promocja", DbType="Float NOT NULL")]
		public double Promocja
		{
			get
			{
				return this._Promocja;
			}
			set
			{
				if ((this._Promocja != value))
				{
					this.OnPromocjaChanging(value);
					this.SendPropertyChanging();
					this._Promocja = value;
					this.SendPropertyChanged("Promocja");
					this.OnPromocjaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lek_Dost_ilosc", Storage="_Dost_iloscs", ThisKey="LekID", OtherKey="LekID")]
		public EntitySet<Dost_ilosc> Dost_iloscs
		{
			get
			{
				return this._Dost_iloscs;
			}
			set
			{
				this._Dost_iloscs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lek_Zam_ilosc", Storage="_Zam_iloscs", ThisKey="LekID", OtherKey="LekID")]
		public EntitySet<Zam_ilosc> Zam_iloscs
		{
			get
			{
				return this._Zam_iloscs;
			}
			set
			{
				this._Zam_iloscs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategorie_Lek", Storage="_Kategorie", ThisKey="KategorieID", OtherKey="KategorieID", IsForeignKey=true)]
		public Kategorie Kategorie
		{
			get
			{
				return this._Kategorie.Entity;
			}
			set
			{
				Kategorie previousValue = this._Kategorie.Entity;
				if (((previousValue != value) 
							|| (this._Kategorie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kategorie.Entity = null;
						previousValue.Leks.Remove(this);
					}
					this._Kategorie.Entity = value;
					if ((value != null))
					{
						value.Leks.Add(this);
						this._KategorieID = value.KategorieID;
					}
					else
					{
						this._KategorieID = default(int);
					}
					this.SendPropertyChanged("Kategorie");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Postac_Lek", Storage="_Postac", ThisKey="PostacID", OtherKey="PostacID", IsForeignKey=true)]
		public Postac Postac
		{
			get
			{
				return this._Postac.Entity;
			}
			set
			{
				Postac previousValue = this._Postac.Entity;
				if (((previousValue != value) 
							|| (this._Postac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Postac.Entity = null;
						previousValue.Leks.Remove(this);
					}
					this._Postac.Entity = value;
					if ((value != null))
					{
						value.Leks.Add(this);
						this._PostacID = value.PostacID;
					}
					else
					{
						this._PostacID = default(int);
					}
					this.SendPropertyChanged("Postac");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dost_iloscs(Dost_ilosc entity)
		{
			this.SendPropertyChanging();
			entity.Lek = this;
		}
		
		private void detach_Dost_iloscs(Dost_ilosc entity)
		{
			this.SendPropertyChanging();
			entity.Lek = null;
		}
		
		private void attach_Zam_iloscs(Zam_ilosc entity)
		{
			this.SendPropertyChanging();
			entity.Lek = this;
		}
		
		private void detach_Zam_iloscs(Zam_ilosc entity)
		{
			this.SendPropertyChanging();
			entity.Lek = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Postac")]
	public partial class Postac : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PostacID;
		
		private string _Nazwa;
		
		private EntitySet<Lek> _Leks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostacIDChanging(int value);
    partial void OnPostacIDChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    #endregion
		
		public Postac()
		{
			this._Leks = new EntitySet<Lek>(new Action<Lek>(this.attach_Leks), new Action<Lek>(this.detach_Leks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostacID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PostacID
		{
			get
			{
				return this._PostacID;
			}
			set
			{
				if ((this._PostacID != value))
				{
					this.OnPostacIDChanging(value);
					this.SendPropertyChanging();
					this._PostacID = value;
					this.SendPropertyChanged("PostacID");
					this.OnPostacIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Postac_Lek", Storage="_Leks", ThisKey="PostacID", OtherKey="PostacID")]
		public EntitySet<Lek> Leks
		{
			get
			{
				return this._Leks;
			}
			set
			{
				this._Leks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Leks(Lek entity)
		{
			this.SendPropertyChanging();
			entity.Postac = this;
		}
		
		private void detach_Leks(Lek entity)
		{
			this.SendPropertyChanging();
			entity.Postac = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Promocja")]
	public partial class Promocja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Dost_iloscID;
		
		private int _KlientID;
		
		private int _Ilosc;
		
		private EntityRef<Klient> _Klient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDost_iloscIDChanging(int value);
    partial void OnDost_iloscIDChanged();
    partial void OnKlientIDChanging(int value);
    partial void OnKlientIDChanged();
    partial void OnIloscChanging(int value);
    partial void OnIloscChanged();
    #endregion
		
		public Promocja()
		{
			this._Klient = default(EntityRef<Klient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dost_iloscID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Dost_iloscID
		{
			get
			{
				return this._Dost_iloscID;
			}
			set
			{
				if ((this._Dost_iloscID != value))
				{
					this.OnDost_iloscIDChanging(value);
					this.SendPropertyChanging();
					this._Dost_iloscID = value;
					this.SendPropertyChanged("Dost_iloscID");
					this.OnDost_iloscIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KlientID", DbType="Int NOT NULL")]
		public int KlientID
		{
			get
			{
				return this._KlientID;
			}
			set
			{
				if ((this._KlientID != value))
				{
					if (this._Klient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKlientIDChanging(value);
					this.SendPropertyChanging();
					this._KlientID = value;
					this.SendPropertyChanged("KlientID");
					this.OnKlientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ilosc", DbType="Int NOT NULL")]
		public int Ilosc
		{
			get
			{
				return this._Ilosc;
			}
			set
			{
				if ((this._Ilosc != value))
				{
					this.OnIloscChanging(value);
					this.SendPropertyChanging();
					this._Ilosc = value;
					this.SendPropertyChanged("Ilosc");
					this.OnIloscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klient_Promocja", Storage="_Klient", ThisKey="KlientID", OtherKey="KlientID", IsForeignKey=true)]
		public Klient Klient
		{
			get
			{
				return this._Klient.Entity;
			}
			set
			{
				Klient previousValue = this._Klient.Entity;
				if (((previousValue != value) 
							|| (this._Klient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Klient.Entity = null;
						previousValue.Promocjas.Remove(this);
					}
					this._Klient.Entity = value;
					if ((value != null))
					{
						value.Promocjas.Add(this);
						this._KlientID = value.KlientID;
					}
					else
					{
						this._KlientID = default(int);
					}
					this.SendPropertyChanged("Klient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UsersId;
		
		private string _Nazwa_uzytkownika;
		
		private string _Haslo;
		
		private string _Prawo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsersIdChanging(int value);
    partial void OnUsersIdChanged();
    partial void OnNazwa_uzytkownikaChanging(string value);
    partial void OnNazwa_uzytkownikaChanged();
    partial void OnHasloChanging(string value);
    partial void OnHasloChanged();
    partial void OnPrawoChanging(string value);
    partial void OnPrawoChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsersId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UsersId
		{
			get
			{
				return this._UsersId;
			}
			set
			{
				if ((this._UsersId != value))
				{
					this.OnUsersIdChanging(value);
					this.SendPropertyChanging();
					this._UsersId = value;
					this.SendPropertyChanged("UsersId");
					this.OnUsersIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa_uzytkownika", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nazwa_uzytkownika
		{
			get
			{
				return this._Nazwa_uzytkownika;
			}
			set
			{
				if ((this._Nazwa_uzytkownika != value))
				{
					this.OnNazwa_uzytkownikaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa_uzytkownika = value;
					this.SendPropertyChanged("Nazwa_uzytkownika");
					this.OnNazwa_uzytkownikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Haslo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Haslo
		{
			get
			{
				return this._Haslo;
			}
			set
			{
				if ((this._Haslo != value))
				{
					this.OnHasloChanging(value);
					this.SendPropertyChanging();
					this._Haslo = value;
					this.SendPropertyChanged("Haslo");
					this.OnHasloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prawo", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Prawo
		{
			get
			{
				return this._Prawo;
			}
			set
			{
				if ((this._Prawo != value))
				{
					this.OnPrawoChanging(value);
					this.SendPropertyChanging();
					this._Prawo = value;
					this.SendPropertyChanged("Prawo");
					this.OnPrawoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zam_ilosc")]
	public partial class Zam_ilosc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Zam_iloscID;
		
		private int _LekID;
		
		private int _ZamowienieID;
		
		private int _Ilosc;
		
		private EntityRef<Lek> _Lek;
		
		private EntityRef<Zamowienie> _Zamowienie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZam_iloscIDChanging(int value);
    partial void OnZam_iloscIDChanged();
    partial void OnLekIDChanging(int value);
    partial void OnLekIDChanged();
    partial void OnZamowienieIDChanging(int value);
    partial void OnZamowienieIDChanged();
    partial void OnIloscChanging(int value);
    partial void OnIloscChanged();
    #endregion
		
		public Zam_ilosc()
		{
			this._Lek = default(EntityRef<Lek>);
			this._Zamowienie = default(EntityRef<Zamowienie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zam_iloscID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Zam_iloscID
		{
			get
			{
				return this._Zam_iloscID;
			}
			set
			{
				if ((this._Zam_iloscID != value))
				{
					this.OnZam_iloscIDChanging(value);
					this.SendPropertyChanging();
					this._Zam_iloscID = value;
					this.SendPropertyChanged("Zam_iloscID");
					this.OnZam_iloscIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LekID", DbType="Int NOT NULL")]
		public int LekID
		{
			get
			{
				return this._LekID;
			}
			set
			{
				if ((this._LekID != value))
				{
					if (this._Lek.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLekIDChanging(value);
					this.SendPropertyChanging();
					this._LekID = value;
					this.SendPropertyChanged("LekID");
					this.OnLekIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZamowienieID", DbType="Int NOT NULL")]
		public int ZamowienieID
		{
			get
			{
				return this._ZamowienieID;
			}
			set
			{
				if ((this._ZamowienieID != value))
				{
					if (this._Zamowienie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZamowienieIDChanging(value);
					this.SendPropertyChanging();
					this._ZamowienieID = value;
					this.SendPropertyChanged("ZamowienieID");
					this.OnZamowienieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ilosc", DbType="Int NOT NULL")]
		public int Ilosc
		{
			get
			{
				return this._Ilosc;
			}
			set
			{
				if ((this._Ilosc != value))
				{
					this.OnIloscChanging(value);
					this.SendPropertyChanging();
					this._Ilosc = value;
					this.SendPropertyChanged("Ilosc");
					this.OnIloscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lek_Zam_ilosc", Storage="_Lek", ThisKey="LekID", OtherKey="LekID", IsForeignKey=true)]
		public Lek Lek
		{
			get
			{
				return this._Lek.Entity;
			}
			set
			{
				Lek previousValue = this._Lek.Entity;
				if (((previousValue != value) 
							|| (this._Lek.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lek.Entity = null;
						previousValue.Zam_iloscs.Remove(this);
					}
					this._Lek.Entity = value;
					if ((value != null))
					{
						value.Zam_iloscs.Add(this);
						this._LekID = value.LekID;
					}
					else
					{
						this._LekID = default(int);
					}
					this.SendPropertyChanged("Lek");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zamowienie_Zam_ilosc", Storage="_Zamowienie", ThisKey="ZamowienieID", OtherKey="ZamowienieID", IsForeignKey=true)]
		public Zamowienie Zamowienie
		{
			get
			{
				return this._Zamowienie.Entity;
			}
			set
			{
				Zamowienie previousValue = this._Zamowienie.Entity;
				if (((previousValue != value) 
							|| (this._Zamowienie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zamowienie.Entity = null;
						previousValue.Zam_iloscs.Remove(this);
					}
					this._Zamowienie.Entity = value;
					if ((value != null))
					{
						value.Zam_iloscs.Add(this);
						this._ZamowienieID = value.ZamowienieID;
					}
					else
					{
						this._ZamowienieID = default(int);
					}
					this.SendPropertyChanged("Zamowienie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zamowienie")]
	public partial class Zamowienie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ZamowienieID;
		
		private int _KlientID;
		
		private double _Suma;
		
		private System.DateTime _Data_zam;
		
		private EntitySet<Zam_ilosc> _Zam_iloscs;
		
		private EntityRef<Klient> _Klient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZamowienieIDChanging(int value);
    partial void OnZamowienieIDChanged();
    partial void OnKlientIDChanging(int value);
    partial void OnKlientIDChanged();
    partial void OnSumaChanging(double value);
    partial void OnSumaChanged();
    partial void OnData_zamChanging(System.DateTime value);
    partial void OnData_zamChanged();
    #endregion
		
		public Zamowienie()
		{
			this._Zam_iloscs = new EntitySet<Zam_ilosc>(new Action<Zam_ilosc>(this.attach_Zam_iloscs), new Action<Zam_ilosc>(this.detach_Zam_iloscs));
			this._Klient = default(EntityRef<Klient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZamowienieID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ZamowienieID
		{
			get
			{
				return this._ZamowienieID;
			}
			set
			{
				if ((this._ZamowienieID != value))
				{
					this.OnZamowienieIDChanging(value);
					this.SendPropertyChanging();
					this._ZamowienieID = value;
					this.SendPropertyChanged("ZamowienieID");
					this.OnZamowienieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KlientID", DbType="Int NOT NULL")]
		public int KlientID
		{
			get
			{
				return this._KlientID;
			}
			set
			{
				if ((this._KlientID != value))
				{
					if (this._Klient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKlientIDChanging(value);
					this.SendPropertyChanging();
					this._KlientID = value;
					this.SendPropertyChanged("KlientID");
					this.OnKlientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suma", DbType="Float NOT NULL")]
		public double Suma
		{
			get
			{
				return this._Suma;
			}
			set
			{
				if ((this._Suma != value))
				{
					this.OnSumaChanging(value);
					this.SendPropertyChanging();
					this._Suma = value;
					this.SendPropertyChanged("Suma");
					this.OnSumaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_zam", DbType="DateTime NOT NULL")]
		public System.DateTime Data_zam
		{
			get
			{
				return this._Data_zam;
			}
			set
			{
				if ((this._Data_zam != value))
				{
					this.OnData_zamChanging(value);
					this.SendPropertyChanging();
					this._Data_zam = value;
					this.SendPropertyChanged("Data_zam");
					this.OnData_zamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zamowienie_Zam_ilosc", Storage="_Zam_iloscs", ThisKey="ZamowienieID", OtherKey="ZamowienieID")]
		public EntitySet<Zam_ilosc> Zam_iloscs
		{
			get
			{
				return this._Zam_iloscs;
			}
			set
			{
				this._Zam_iloscs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klient_Zamowienie", Storage="_Klient", ThisKey="KlientID", OtherKey="KlientID", IsForeignKey=true)]
		public Klient Klient
		{
			get
			{
				return this._Klient.Entity;
			}
			set
			{
				Klient previousValue = this._Klient.Entity;
				if (((previousValue != value) 
							|| (this._Klient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Klient.Entity = null;
						previousValue.Zamowienies.Remove(this);
					}
					this._Klient.Entity = value;
					if ((value != null))
					{
						value.Zamowienies.Add(this);
						this._KlientID = value.KlientID;
					}
					else
					{
						this._KlientID = default(int);
					}
					this.SendPropertyChanged("Klient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zam_iloscs(Zam_ilosc entity)
		{
			this.SendPropertyChanging();
			entity.Zamowienie = this;
		}
		
		private void detach_Zam_iloscs(Zam_ilosc entity)
		{
			this.SendPropertyChanging();
			entity.Zamowienie = null;
		}
	}
}
#pragma warning restore 1591
